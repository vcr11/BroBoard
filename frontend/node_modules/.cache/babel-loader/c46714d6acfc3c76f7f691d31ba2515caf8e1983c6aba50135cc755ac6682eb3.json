{"ast":null,"code":"// frontend/src/api/api.js\n\nimport axios from 'axios';\n\n// ✅ Create an Axios instance with base API URL\nconst API = axios.create({\n  baseURL: 'http://localhost:5050/api' // Update this to your deployment URL if needed\n});\n\n// ✅ Attach JWT token from localStorage to all outgoing requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('broboard_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // Handle error before request is sent\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/Users/chandrashekharvangala/broboard/frontend/src/api/api.js"],"sourcesContent":["// frontend/src/api/api.js\n\nimport axios from 'axios';\n\n// ✅ Create an Axios instance with base API URL\nconst API = axios.create({\n  baseURL: 'http://localhost:5050/api', // Update this to your deployment URL if needed\n});\n\n// ✅ Attach JWT token from localStorage to all outgoing requests\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('broboard_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Handle error before request is sent\n    return Promise.reject(error);\n  }\n);\n\nexport default API;\n\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EACpD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}